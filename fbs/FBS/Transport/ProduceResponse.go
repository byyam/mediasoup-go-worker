// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package Transport

import (
	flatbuffers "github.com/google/flatbuffers/go"

	FBS__RtpParameters "github.com/byyam/mediasoup-go-worker/fbs/FBS/RtpParameters"
)

type ProduceResponseT struct {
	Type FBS__RtpParameters.Type `json:"type"`
}

func (t *ProduceResponseT) Pack(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	if t == nil {
		return 0
	}
	ProduceResponseStart(builder)
	ProduceResponseAddType(builder, t.Type)
	return ProduceResponseEnd(builder)
}

func (rcv *ProduceResponse) UnPackTo(t *ProduceResponseT) {
	t.Type = rcv.Type()
}

func (rcv *ProduceResponse) UnPack() *ProduceResponseT {
	if rcv == nil {
		return nil
	}
	t := &ProduceResponseT{}
	rcv.UnPackTo(t)
	return t
}

type ProduceResponse struct {
	_tab flatbuffers.Table
}

func GetRootAsProduceResponse(buf []byte, offset flatbuffers.UOffsetT) *ProduceResponse {
	n := flatbuffers.GetUOffsetT(buf[offset:])
	x := &ProduceResponse{}
	x.Init(buf, n+offset)
	return x
}

func FinishProduceResponseBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.Finish(offset)
}

func GetSizePrefixedRootAsProduceResponse(buf []byte, offset flatbuffers.UOffsetT) *ProduceResponse {
	n := flatbuffers.GetUOffsetT(buf[offset+flatbuffers.SizeUint32:])
	x := &ProduceResponse{}
	x.Init(buf, n+offset+flatbuffers.SizeUint32)
	return x
}

func FinishSizePrefixedProduceResponseBuffer(builder *flatbuffers.Builder, offset flatbuffers.UOffsetT) {
	builder.FinishSizePrefixed(offset)
}

func (rcv *ProduceResponse) Init(buf []byte, i flatbuffers.UOffsetT) {
	rcv._tab.Bytes = buf
	rcv._tab.Pos = i
}

func (rcv *ProduceResponse) Table() flatbuffers.Table {
	return rcv._tab
}

func (rcv *ProduceResponse) Type() FBS__RtpParameters.Type {
	o := flatbuffers.UOffsetT(rcv._tab.Offset(4))
	if o != 0 {
		return FBS__RtpParameters.Type(rcv._tab.GetByte(o + rcv._tab.Pos))
	}
	return 0
}

func (rcv *ProduceResponse) MutateType(n FBS__RtpParameters.Type) bool {
	return rcv._tab.MutateByteSlot(4, byte(n))
}

func ProduceResponseStart(builder *flatbuffers.Builder) {
	builder.StartObject(1)
}
func ProduceResponseAddType(builder *flatbuffers.Builder, type_ FBS__RtpParameters.Type) {
	builder.PrependByteSlot(0, byte(type_), 0)
}
func ProduceResponseEnd(builder *flatbuffers.Builder) flatbuffers.UOffsetT {
	return builder.EndObject()
}
