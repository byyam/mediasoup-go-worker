// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package SrtpParameters

import "strconv"

type SrtpCryptoSuite byte

const (
	SrtpCryptoSuiteAEAD_AES_256_GCM        SrtpCryptoSuite = 0
	SrtpCryptoSuiteAEAD_AES_128_GCM        SrtpCryptoSuite = 1
	SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_80 SrtpCryptoSuite = 2
	SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_32 SrtpCryptoSuite = 3
)

var EnumNamesSrtpCryptoSuite = map[SrtpCryptoSuite]string{
	SrtpCryptoSuiteAEAD_AES_256_GCM:        "AEAD_AES_256_GCM",
	SrtpCryptoSuiteAEAD_AES_128_GCM:        "AEAD_AES_128_GCM",
	SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_80: "AES_CM_128_HMAC_SHA1_80",
	SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_32: "AES_CM_128_HMAC_SHA1_32",
}

var EnumValuesSrtpCryptoSuite = map[string]SrtpCryptoSuite{
	"AEAD_AES_256_GCM":        SrtpCryptoSuiteAEAD_AES_256_GCM,
	"AEAD_AES_128_GCM":        SrtpCryptoSuiteAEAD_AES_128_GCM,
	"AES_CM_128_HMAC_SHA1_80": SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_80,
	"AES_CM_128_HMAC_SHA1_32": SrtpCryptoSuiteAES_CM_128_HMAC_SHA1_32,
}

func (v SrtpCryptoSuite) String() string {
	if s, ok := EnumNamesSrtpCryptoSuite[v]; ok {
		return s
	}
	return "SrtpCryptoSuite(" + strconv.FormatInt(int64(v), 10) + ")"
}
