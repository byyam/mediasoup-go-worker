package workerchannel

import (
	FBS__Request "github.com/byyam/mediasoup-go-worker/fbs/FBS/Request"
)

var FBSRequestMethod = map[FBS__Request.Method]string{
	FBS__Request.MethodWORKER_CLOSE:                                   "worker.close",
	FBS__Request.MethodWORKER_DUMP:                                    "worker.dump",
	FBS__Request.MethodWORKER_GET_RESOURCE_USAGE:                      "worker.getResourceUsage",
	FBS__Request.MethodWORKER_UPDATE_SETTINGS:                         "worker.updateSettings",
	FBS__Request.MethodWORKER_CREATE_WEBRTCSERVER:                     "worker.createWebRtcServer",
	FBS__Request.MethodWORKER_CREATE_ROUTER:                           "worker.createRouter",
	FBS__Request.MethodWORKER_WEBRTCSERVER_CLOSE:                      "worker.closeWebRtcServer",
	FBS__Request.MethodWORKER_CLOSE_ROUTER:                            "worker.closeRouter",
	FBS__Request.MethodWEBRTCSERVER_DUMP:                              "webRtcServer.dump",
	FBS__Request.MethodROUTER_DUMP:                                    "router.dump",
	FBS__Request.MethodROUTER_CREATE_WEBRTCTRANSPORT:                  "router.createWebRtcTransport",
	FBS__Request.MethodROUTER_CREATE_WEBRTCTRANSPORT_WITH_SERVER:      "router.createWebRtcTransportWithServer",
	FBS__Request.MethodROUTER_CREATE_PLAINTRANSPORT:                   "router.createPlainTransport",
	FBS__Request.MethodROUTER_CREATE_PIPETRANSPORT:                    "router.createPipeTransport",
	FBS__Request.MethodROUTER_CREATE_DIRECTTRANSPORT:                  "router.createDirectTransport",
	FBS__Request.MethodROUTER_CLOSE_TRANSPORT:                         "router.closeTransport",
	FBS__Request.MethodROUTER_CREATE_ACTIVESPEAKEROBSERVER:            "router.createActiveSpeakerObserver",
	FBS__Request.MethodROUTER_CREATE_AUDIOLEVELOBSERVER:               "router.createAudioLevelObserver",
	FBS__Request.MethodROUTER_CLOSE_RTPOBSERVER:                       "router.closeRtpObserver",
	FBS__Request.MethodTRANSPORT_DUMP:                                 "transport.dump",
	FBS__Request.MethodTRANSPORT_GET_STATS:                            "transport.getStats",
	FBS__Request.MethodTRANSPORT_CONNECT:                              "transport.connect",
	FBS__Request.MethodTRANSPORT_SET_MAX_INCOMING_BITRATE:             "transport.setMaxIncomingBitrate",
	FBS__Request.MethodTRANSPORT_SET_MAX_OUTGOING_BITRATE:             "transport.setMaxOutgoingBitrate",
	FBS__Request.MethodTRANSPORT_SET_MIN_OUTGOING_BITRATE:             "transport.setMinOutgoingBitrate",
	FBS__Request.MethodTRANSPORT_RESTART_ICE:                          "transport.restartIce",
	FBS__Request.MethodTRANSPORT_PRODUCE:                              "transport.produce",
	FBS__Request.MethodTRANSPORT_PRODUCE_DATA:                         "transport.produceData",
	FBS__Request.MethodTRANSPORT_CONSUME:                              "transport.consume",
	FBS__Request.MethodTRANSPORT_CONSUME_DATA:                         "transport.consumeData",
	FBS__Request.MethodTRANSPORT_ENABLE_TRACE_EVENT:                   "transport.enableTraceEvent",
	FBS__Request.MethodTRANSPORT_CLOSE_PRODUCER:                       "transport.closeProducer",
	FBS__Request.MethodTRANSPORT_CLOSE_CONSUMER:                       "transport.closeConsumer",
	FBS__Request.MethodTRANSPORT_CLOSE_DATAPRODUCER:                   "transport.closeDataProducer",
	FBS__Request.MethodTRANSPORT_CLOSE_DATACONSUMER:                   "transport.closeDataConsumer",
	FBS__Request.MethodPLAINTRANSPORT_CONNECT:                         "plainTransport.connect",
	FBS__Request.MethodPIPETRANSPORT_CONNECT:                          "pipeTransport.connect",
	FBS__Request.MethodWEBRTCTRANSPORT_CONNECT:                        "webRtcTransport.connect",
	FBS__Request.MethodPRODUCER_DUMP:                                  "producer.dump",
	FBS__Request.MethodPRODUCER_GET_STATS:                             "producer.getStats",
	FBS__Request.MethodPRODUCER_PAUSE:                                 "producer.pause",
	FBS__Request.MethodPRODUCER_RESUME:                                "producer.resume",
	FBS__Request.MethodPRODUCER_ENABLE_TRACE_EVENT:                    "producer.enableTraceEvent",
	FBS__Request.MethodCONSUMER_DUMP:                                  "consumer.dump",
	FBS__Request.MethodCONSUMER_GET_STATS:                             "consumer.getStats",
	FBS__Request.MethodCONSUMER_PAUSE:                                 "consumer.pause",
	FBS__Request.MethodCONSUMER_RESUME:                                "consumer.resume",
	FBS__Request.MethodCONSUMER_SET_PREFERRED_LAYERS:                  "consumer.setPreferredLayers",
	FBS__Request.MethodCONSUMER_SET_PRIORITY:                          "consumer.setPriority",
	FBS__Request.MethodCONSUMER_REQUEST_KEY_FRAME:                     "consumer.requestKeyFrame",
	FBS__Request.MethodCONSUMER_ENABLE_TRACE_EVENT:                    "consumer.enableTraceEvent",
	FBS__Request.MethodDATAPRODUCER_DUMP:                              "dataProducer.dump",
	FBS__Request.MethodDATAPRODUCER_GET_STATS:                         "dataProducer.getStats",
	FBS__Request.MethodDATAPRODUCER_PAUSE:                             "dataProducer.pause",
	FBS__Request.MethodDATAPRODUCER_RESUME:                            "dataProducer.resume",
	FBS__Request.MethodDATACONSUMER_DUMP:                              "dataConsumer.dump",
	FBS__Request.MethodDATACONSUMER_GET_STATS:                         "dataConsumer.getStats",
	FBS__Request.MethodDATACONSUMER_PAUSE:                             "dataConsumer.pause",
	FBS__Request.MethodDATACONSUMER_RESUME:                            "dataConsumer.resume",
	FBS__Request.MethodDATACONSUMER_GET_BUFFERED_AMOUNT:               "dataConsumer.getBufferedAmount",
	FBS__Request.MethodDATACONSUMER_SET_BUFFERED_AMOUNT_LOW_THRESHOLD: "dataConsumer.setBufferedAmountLowThreshold",
	FBS__Request.MethodDATACONSUMER_SEND:                              "dataConsumer.send",
	FBS__Request.MethodDATACONSUMER_SET_SUBCHANNELS:                   "dataConsumer.setSubchannels",
	FBS__Request.MethodDATACONSUMER_ADD_SUBCHANNEL:                    "dataConsumer.addSubchannel",
	FBS__Request.MethodDATACONSUMER_REMOVE_SUBCHANNEL:                 "dataConsumer.removeSubchannel",
	FBS__Request.MethodRTPOBSERVER_PAUSE:                              "rtpObserver.pause",
	FBS__Request.MethodRTPOBSERVER_RESUME:                             "rtpObserver.resume",
	FBS__Request.MethodRTPOBSERVER_ADD_PRODUCER:                       "rtpObserver.addProducer",
	FBS__Request.MethodRTPOBSERVER_REMOVE_PRODUCER:                    "rtpObserver.removeProducer",
}
